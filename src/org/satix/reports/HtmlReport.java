package org.satix.reports;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.satix.beans.TestCase;
import org.satix.beans.TestSuite;
import org.satix.constants.ReservedVariables;
import org.satix.properties.SystemConfigurations;
import org.satix.utils.EmailHelper;
import org.satix.utils.SatixLogger;


public class HtmlReport extends GenericReport {
	private static final String CLASSNAME = HtmlReport.class.getSimpleName();
	private static final Logger logger = SatixLogger.getLogger(CLASSNAME);

	private String reportPath;

	public HtmlReport(String suiteName) {
		super(suiteName);
	}

	public HtmlReport(String suiteName, String fileName) {
		super(suiteName, fileName);
	}

	@Override
	public void print() throws Exception {		
		boolean single = false;
		boolean write = false;
		boolean noerror = true;
		boolean noRunningLog = true;

		int totalFailedTestCases = getTotalFailedTestCases();

		//int width = 800;
		List<TestSuite> testSuites = getTestSuites();
		if (null==testSuites || testSuites.size()==0) {
			logger.log(Level.INFO, "No test cases were executed.");
			return;
		} else if (testSuites.size()==1 && "".equals(testSuites.get(0).getSuiteName())) {
			single = true;
		}

		if (totalFailedTestCases > 0) {
			noerror = false;
		}

		int totalRunningLog = getTotalRunningLog();
		if (totalRunningLog > 0) {
			noRunningLog = false;
		}

/*		width = 630;
		if (!noerror) {
			width = width + 200;
		}
		if (!noRunningLog) {
			width = width + 500;
		}*/
		if (null == getFileName()) {
			setFileName(getSuiteName() + "-" + new SimpleDateFormat("yyyy-MM-dd HH_mm_ss").format(new Date()));
		}
		String fileName = getFileName() + ".html";
		File folder = new File(SystemConfigurations.getFolderPath(ReservedVariables.REPORTPATH.getName(), "." + File.separator + "reports"));
		if (!folder.exists()) {
			folder.mkdir();
		}
		
		
		FileOutputStream fos =new FileOutputStream(SystemConfigurations.getFolderPath(
				ReservedVariables.REPORTPATH.getName(), "." + File.separator + "reports") + fileName);
		
//		 OutputStreamWriter osw = new OutputStreamWriter(fos, "UTF-8");   
//		BufferedOutputStream osw1 = new BufferedOutputStream(osw);   
//		
//		PrintStream ps = new PrintStream(new BufferedOutputStream(ss,"UTF-8"));
//		
//		
//		PrintStream psSS = new PrintStream(new BufferedOutputStream(fos));
//		

		PrintStream ps = new PrintStream(new BufferedOutputStream(new FileOutputStream(SystemConfigurations.getFolderPath(
				ReservedVariables.REPORTPATH.getName(), "." + File.separator + "reports") + fileName)));
		ps.println("<html><meta charset='UTF-8'><head><title>SatixRunner Automated Test Report</title>");
		ps.println("<style type=\"text/css\">#main{margin:auto;background:#fff;font-family:Arial;}");
		ps.println("th{white-space:nowrap;border-right:solid #999 1px;}");
		ps.println("td{border-right:solid #999 1px;border-bottom:solid #999 1px;padding:0 5px}");
		ps.println("#summary{font-family:Arial; font-size:80%; color:#4D4D4D; background-color:#eee}");
		ps.println("#summary td{white-space:nowrap}");
		ps.println("#main-title{font-family:Arial; font-size:150%; color:#000;});"
				+ "</style>");
		ps.println("</head><body>");

		if (SystemConfigurations.getValue(ReservedVariables.REPORTTITLE.getName(), null) != null) {
			ps.println("<div id=\"main\"><div id=\"main-title\">" + SystemConfigurations.getValue(
					ReservedVariables.REPORTTITLE.getName(), null) + "</div>");
		} else {
			ps.println("<div id=\"main\"><div id=\"main-title\">Test Report of '" + getSuiteName() + "'</div>");
			ps.println("<div>- Generated by Satix</div><br>");
		}

		ps.println("<font style=\"font-family:Arial; font-size:80%; color:#4474BB\">System info: </font><br>" +
				"<font style=\"font-family:Arial; font-size:80%;\">" + getPlatform() + "</font><br>");
		ps.println("<br>");
		ps.println("<table border=\"0\" height=\"75\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border:solid #666666 1px; text-align:left;\">");
		ps.println("<tr height=\"25\" bgcolor=\"#448833\" style=\"color:#fff; font-family:Arial; font-size:90%\">");

		if (!single) {
			ps.println("<th>Test Suite Name</th>");
		}
		ps.println("<th>Test Case Name</th>" + "<th width=\"130\">Elapsed(ms)</th>" + "<th width=\"100\">Test Status</th>");
		if (!noerror) {
			ps.println("<th>Error Log</th>");
		}
		if (!noRunningLog) {
			ps.println("<th>Running Log</th>");
		}
		ps.println("</tr>");

		for (TestSuite ts : getTestSuites()) {
			List<TestCase> testCases = ts.getTestCases();
			write = false;
			for (TestCase tc : testCases) {
				ps.println("<tr style=\"font-family:Arial; font-size:80%; color:#000\">");
				if (!write && !single) {
					ps.println("<td bgcolor=\"#F5FFFA\" rowspan=\"" + testCases.size() + "\">");
					ps.println(ts.getSuiteName());
					ps.println("</td>");
					write = true;
				}
				ps.println("<td bgcolor=\"#F5FFFA\">" + tc.getTitle() + "</td><td bgcolor=\"#F5FFFA\">" + tc.getElapsedTime() + "</td>");
				if ("Successful".equals(tc.getStatus())) {
					ps.println("<td bgcolor=\"#90EE90\">");
					ps.println(tc.getStatus());
					ps.println("</td>");
					if (!noerror) {
						ps.println("<td bgcolor=\"#F5FFFA\">");
						ps.println("&nbsp;");
						ps.println("</td>");
					}
				} else if ("Failed".equals(tc.getStatus())) {
					ps.println("<td bgcolor=\"#FF8C69\">");
					ps.println(tc.getStatus());
					ps.println("</td>");
					ps.println("<td bgcolor=\"#F5FFFA\" style=\"color:#EE0000\">");
					ps.println(tc.getErrorLog());
					ps.println("</td>");
				} else if ("No running".equals(tc.getStatus())) {
					ps.println("<td bgcolor=\"#F2F5A9\">");
					ps.println(tc.getStatus());
					ps.println("</td>");
					if (!noerror) {
						ps.println("<td bgcolor=\"#F5FFFA\">");
						ps.println("&nbsp;");
						ps.println("</td>");
					}
				} else {
					ps.println("<td bgcolor=\"#F2F5A9\">");
					ps.println(tc.getStatus());
					ps.println("</td>");
					if (!noerror) {
						ps.println("<td bgcolor=\"#F5FFFA\">");
						ps.println("&nbsp;");
						ps.println("</td>");
					}
				}
				if (!noRunningLog) {
					ps.println("<td bgcolor=\"#F5FFFA\" align=\"left\" valign=\"top\">");
					if (tc.getRunningLog().size() > 0) {
						for (String s : tc.getRunningLog()) {
							ps.println(s + "<br>");
						}
					} else {
						ps.println("&nbsp;");
					}
					ps.println("</td>");
				}
				ps.println("</tr>");
			}
		}

		ps.println("<tr height=\"25\" id=\"summary\">");
		if (!single) {
			ps.println("<td><b>Total Test Suites: </b>" + getTotalTestSuites() + "</td>");
		}

		ps.println("<td><b>Total Test Cases: </b>" + getTotalTestCases() 
				+ "</td><td><b>Total Elapsed: </b>" + getTotalElapsed()
				+ "</td><td><b>Total Failed: </b>" + totalFailedTestCases + "</td>");

		if (!noerror) {
			ps.println("<td>&nbsp;</td>");
		}
		if (!noRunningLog) {
			ps.println("<td>&nbsp;</td>");
		}

		ps.println("</tr></table>");
		ps.println("<p></p><span style=\"display: none\" id=hidden_div><font style=\"font-family:Arial; " +
				"font-family:Arial; font-size:80%; padding: 2px\"></font></span>");
		ps.println("<div></body></html>");
		ps.close();		
	}

	@Override
	public void sendEmail() {
		reportPath = SystemConfigurations.getFolderPath(ReservedVariables.REPORTPATH.getName(), "." + File.separator + "reports") 
				+ getFileName() + ".html";
		File file = new File(reportPath);
		try {
			FileInputStream in = new FileInputStream(file);
			byte[] bb = new byte[in.available()];
			in.read(bb);
			if (file.exists()) {
				EmailHelper eu = new EmailHelper();
				eu.setBody(new String(bb));
				eu.send();
			}
		} catch (Exception e) {
			logger.log(Level.SEVERE, "********" + e.getMessage());
			e.printStackTrace();
		}
	}
}