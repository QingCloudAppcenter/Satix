package org.satix;

import java.io.IOException;
import java.util.HashMap;

import com.ibm.json.java.JSONArray;
import com.ibm.json.java.JSONObject;

/**
 * This class is to store the local variable-value generated during runtime,
 * such as storing a dynamic ID generated by an action, which will be used
 * by the following actions within the same test case. We can put more maps
 * for any situation other than test case scope if necessary. 
 * 
 *
 */
public class Cache {
	private static HashMap<String, Object> testCaseVars;

	public static void putTestCaseVar(String key, String value) throws IOException {
		if (null == testCaseVars) {
			testCaseVars = new HashMap<String, Object>();
		}
		
		if (value.indexOf('[')==0 && value.lastIndexOf(']')==(value.length()-1)) {
    		JSONArray array = JSONArray.parse(value);
    		testCaseVars.put(key, array);
    	} if (value.indexOf('{')==0 && value.lastIndexOf('}')==(value.length()-1)) {
    		JSONObject obj = JSONObject.parse(value);
    		testCaseVars.put(key, obj);
    	} else {
    		testCaseVars.put(key, value);
    	}		
	}
	public static Object getTestCaseVars(String key) {
		return testCaseVars.get(key);
	}
	public static HashMap<String, Object> getTestCaseCache() {
		return testCaseVars;
	}
	public static void clearTestCaseVars() {
		if (testCaseVars != null) {
			testCaseVars.clear();
		}
	}
}
